{"version":3,"file":"static/js/681.88623b11.chunk.js","mappings":"yNAyCA,UArCgB,WACd,OAA8BA,EAAAA,EAAAA,YAA9B,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,YAA9B,eAAOG,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAcR,OAZAE,EAAAA,EAAAA,YAAU,YACR,iBAAC,gHAE6BC,EAAAA,EAAAA,IAAWH,GAFxC,gBAEWI,EAFX,EAEWA,QACRP,EAAWO,GACXL,GAAW,GAJd,gDAMGA,GAAW,GANd,wDAAD,EASD,GAAE,CAACC,KAGF,gCACGF,GAAW,WAEVA,GAAWF,IACX,wBACGA,EAAQS,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACX,2BACE,8BAAQ,WAASF,MACjB,uBAAIC,MAFGC,EADE,OASfV,GAA+B,KAAb,OAAPF,QAAO,IAAPA,OAAA,EAAAA,EAASa,UAAgB,uBAAG,iCAG9C,C","sources":["components/Reviews.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from 'services/api';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState();\n  const [loading, setLoading] = useState();\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const { results } = await getReviews(movieId);\n        setReviews(results);\n        setLoading(false);\n      } catch (error) {\n        setLoading(false);\n      }\n    })();\n  }, [movieId]);\n\n  return (\n    <>\n      {loading && 'Loading'}\n\n      {!loading && reviews && (\n        <ul>\n          {reviews.map(({ author, content, id }) => (\n            <li key={id}>\n              <strong>Author: {author}</strong>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n\n      {!loading && reviews?.length === 0 && <p>No reviews for this movie.</p>}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["useState","reviews","setReviews","loading","setLoading","movieId","useParams","useEffect","getReviews","results","map","author","content","id","length"],"sourceRoot":""}